<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="NoCompatibleDevicesAfterRanking" xml:space="preserve">
    <value>The process of ranking devices removed all compatible devices.</value>
  </data>
  <data name="InactiveSleepTimeCannotBeZero" xml:space="preserve">
    <value>The inactive sleep time must be greater than or equal to zero.  Specify zero or a positive value.</value>
  </data>
  <data name="NullOrEmptyScreenDeviceName" xml:space="preserve">
    <value>The screen device name must be a non-empty, non-null string.</value>
  </data>
  <data name="DefaultTitleName" xml:space="preserve">
    <value>Game</value>
  </data>
  <data name="ServiceMustBeAssignable" xml:space="preserve">
    <value>Service provider object of type {0} must be assignable to service type {1}.</value>
  </data>
  <data name="RunNotSupported" xml:space="preserve">
    <value>Run is not supported for this platform.</value>
  </data>
  <data name="CannotCreateGameType" xml:space="preserve">
    <value>Game type cannot be created.  The game manifest may not be properly configured.</value>
  </data>
  <data name="InvalidScreenDeviceName" xml:space="preserve">
    <value>The device name is not valid. Device names are in the form \\.\\DEVICE1</value>
  </data>
  <data name="NoAudioHardware" xml:space="preserve">
    <value>Could not find a suitable audio device. Verify that a sound card is installed, and check the driver properties to make sure it is not disabled.</value>
  </data>
  <data name="NoCompatibleDevices" xml:space="preserve">
    <value>Could not find a Direct3D device that supports the XNA Framework {0} profile.

Verify that a suitable graphics device is installed.

Make sure the desktop is not locked, and that no other application is running in full screen mode.

Avoid running under Remote Desktop or as a Windows service.

Check the display properties to make sure hardware acceleration is set to Full.</value>
  </data>
  <data name="GameNotDerivedFromValidGameType" xml:space="preserve">
    <value>Game type is not derived from proper game type.</value>
  </data>
  <data name="GraphicsDeviceManagerAlreadyPresent" xml:space="preserve">
    <value>A graphics device manager is already registered.  The graphics device manager cannot be changed once it is set.</value>
  </data>
  <data name="ServiceAlreadyPresent" xml:space="preserve">
    <value>Container already contains a service of this type.</value>
  </data>
  <data name="GameCannotBeNull" xml:space="preserve">
    <value>Game cannot be null.</value>
  </data>
  <data name="BackBufferDimMustBePositive" xml:space="preserve">
    <value>BackBufferWidth and BackBufferHeight must be greater than zero.</value>
  </data>
  <data name="PropertyCannotBeCalledBeforeInitialize" xml:space="preserve">
    <value>The GraphicsDevice property cannot be used before Initialize has been called.</value>
  </data>
  <data name="CannotAddSameComponentMultipleTimes" xml:space="preserve">
    <value>Cannot add the same game component to a game component collection multiple times.</value>
  </data>
  <data name="NoMultipleRuns" xml:space="preserve">
    <value>Cannot call Game.Run multiple times within the same application.</value>
  </data>
  <data name="Direct3DCreateError" xml:space="preserve">
    <value>Unable to create the graphics device.</value>
  </data>
  <data name="Direct3DInvalidCreateParameters" xml:space="preserve">
    <value>The device creation parameters contain invalid configuration options.</value>
  </data>
  <data name="NoSuitableGraphicsDevice" xml:space="preserve">
    <value>No suitable graphics card found.</value>
  </data>
  <data name="ValidateBackBufferDimsFullScreen" xml:space="preserve">
    <value>When IsFullScreen is true, BackBufferWidth and BackBufferHeight must be non-zero.</value>
  </data>
  <data name="GraphicsComponentNotAttachedToGame" xml:space="preserve">
    <value>Cannot commit or change device settings if the graphics component has not been added to a game's component list.</value>
  </data>
  <data name="ServiceProviderCannotBeNull" xml:space="preserve">
    <value>The service provider instance cannot be null.</value>
  </data>
  <data name="PreviousDrawThrew" xml:space="preserve">
    <value>A previous Draw call threw an unhandled exception. See InnerException for details.</value>
  </data>
  <data name="InvalidScreenAdapter" xml:space="preserve">
    <value>The adapter does not map to a valid monitor screen.</value>
  </data>
  <data name="TargetElaspedCannotBeZero" xml:space="preserve">
    <value>The target elapsed time must be greater than zero.  Specify a non-zero positive value.</value>
  </data>
  <data name="MissingGraphicsDeviceService" xml:space="preserve">
    <value>Drawable components require a graphics device service in the game service container.</value>
  </data>
  <data name="NoHighResolutionTimer" xml:space="preserve">
    <value>Current system does not support a high-resolution counter.</value>
  </data>
  <data name="ServiceTypeCannotBeNull" xml:space="preserve">
    <value>The service type cannot be null.</value>
  </data>
  <data name="ValidateBackBufferDimsModeFullScreen" xml:space="preserve">
    <value>The BackBufferWidth and BackBufferHeight values do not correspond to a valid display mode.</value>
  </data>
  <data name="NoNullUseDefaultAdapter" xml:space="preserve">
    <value>Adapter cannot be null.  Try using GraphicsAdapter.DefaultAdapter instead.</value>
  </data>
  <data name="CannotSetItemsIntoGameComponentCollection" xml:space="preserve">
    <value>Cannot set a value using operator[] on GameComponentCollection.  Use Add/Remove instead.</value>
  </data>
  <data name="NoGraphicsDeviceService" xml:space="preserve">
    <value>This property requires a graphics device service in the game service container.</value>
  </data>
  <data name="MustCallBeginDeviceChange" xml:space="preserve">
    <value>Must call BeginScreenDeviceChange before calling EndScreenDeviceChange</value>
  </data>
  <data name="TitleCannotBeNull" xml:space="preserve">
    <value>The title name cannot be null.  Use an empty string instead.</value>
  </data>
</root>